{"ast":null,"code":"import { BUSQUEDA, BUSCARALL, FILTER, GENRES } from './action-types.js';\nimport axios from 'axios';\nexport const Listado = () => {\n  return async dispatch => {\n    try {\n      console.log(\"entro en la busqueda\");\n      const endpoint = 'http://localhost:3001/videogames/';\n      const {\n        data\n      } = await axios.get(endpoint);\n      console.log(\"desarrollo el data\");\n      const {\n        results\n      } = data.allgamersonline;\n      const newData = results.map(element => {\n        console.log(\"datos \" + element.id + ' - ' + element.name);\n        return {\n          id: element.id,\n          name: element.name,\n          background_image: element.background_image,\n          rating: element.rating,\n          genres: element.genres.name\n        };\n      });\n      dispatch({\n        type: BUSQUEDA,\n        payload: newData\n      });\n    } catch (error) {\n      console.error('Error al mostrar Juegos:', error);\n    }\n  };\n};\n_c = Listado;\nexport const busquedaAll = () => {\n  return async dispatch => {\n    try {\n      console.log(\"entro en la busqueda\");\n      const endpoint = 'http://localhost:3001/videogames/';\n      const {\n        data\n      } = await axios.get(endpoint);\n\n      //const pagina= data.allgamersonline\n      // const allgamersonline = data.allgamersonline; \n      const priemrabusqueda = [];\n      for (const pagina in data.allgamersonline) {\n        if (Object.hasOwnProperty.call(data.allgamersonline, pagina)) {\n          const results = data.allgamersonline[pagina].results;\n          const formattedResults = results.map(element => ({\n            id: element.id,\n            name: element.name,\n            background_image: element.background_image,\n            rating: element.rating,\n            genres: element.genres[0].name\n          }));\n          priemrabusqueda.push(...formattedResults);\n        }\n      }\n\n      /*    pagina.map((element) => {\r\n              const results = element.results\r\n              console.log(\"datos \"+results.id +' - '+results.name);                  \r\n                return {\r\n                                    id: results.id,\r\n                                    name: results.name,\r\n                                    background_image: results.background_image,\r\n                                    rating: results.rating,\r\n                                    genres: results.genres[0].name,                           \r\n                                  }\r\n            } )\r\n       */\n\n      /*\r\n                const priemrabusqueda =  results.map(element => {\r\n                      console.log(\"datos \"+element.id +' - '+element.name);                  \r\n                        return {\r\n                                            id: element.id,\r\n                                            name: element.name,\r\n                                            background_image: element.background_image,\r\n                                            rating: element.rating,\r\n                                            genres: element.genres[0].name,                           \r\n                                          }\r\n                                        });\r\n      \r\n                                     //   console.log(\"mostrando busqueda\"+ JSON.stringify(priemrabusqueda))\r\n                                     */\n\n      dispatch({\n        type: BUSCARALL,\n        payload: priemrabusqueda\n      });\n    } catch (error) {\n      console.error('Error al mostrar Juegos:', error);\n    }\n  };\n};\nexport const genres = () => {\n  return async dispatch => {\n    try {\n      const endpoint = 'http://localhost:3001/genres/';\n      const {\n        data\n      } = await axios.get(endpoint);\n      const genres = data.elementos;\n      dispatch({\n        type: GENRES,\n        payload: genres\n      });\n    } catch (error) {}\n  };\n};\nexport const fiterCard = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"Listado\");","map":{"version":3,"names":["BUSQUEDA","BUSCARALL","FILTER","GENRES","axios","Listado","dispatch","console","log","endpoint","data","get","results","allgamersonline","newData","map","element","id","name","background_image","rating","genres","type","payload","error","_c","busquedaAll","priemrabusqueda","pagina","Object","hasOwnProperty","call","formattedResults","push","elementos","fiterCard","gender","$RefreshReg$"],"sources":["C:/Users/Luis Buelvas/Desktop/henry/M5/proyecto_pi/PI-Videogames-main/client/src/Redux/actions.js"],"sourcesContent":["import {BUSQUEDA, BUSCARALL, FILTER, GENRES} from './action-types.js'\r\nimport axios from 'axios';\r\n\r\nexport const Listado = ()=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            console.log(\"entro en la busqueda\");\r\n            const endpoint = 'http://localhost:3001/videogames/'\r\n            const {data} = await axios.get(endpoint)\r\n            console.log(\"desarrollo el data\");\r\n            const {results} = data.allgamersonline\r\n            \r\n            \r\n            const newData =  results.map(element => {\r\n                console.log(\"datos \"+element.id +' - '+element.name);                  \r\n                  return {\r\n                                      id: element.id,\r\n                                      name: element.name,\r\n                                      background_image: element.background_image,\r\n                                      rating: element.rating,\r\n                                      genres: element.genres.name,                           \r\n                                    }\r\n                                  });\r\n          \r\n\r\n            dispatch({ \r\n                    type: BUSQUEDA,\r\n                    payload: newData,   \r\n                })\r\n        } catch (error) {\r\n            console.error('Error al mostrar Juegos:', error);\r\n        }\r\n       \r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const busquedaAll =() =>{\r\n\r\n    return async (dispatch)=>{\r\n        try {\r\n            console.log(\"entro en la busqueda\");\r\n            const endpoint = 'http://localhost:3001/videogames/'\r\n            const {data} = await axios.get(endpoint)\r\n           \r\n            //const pagina= data.allgamersonline\r\n           // const allgamersonline = data.allgamersonline; \r\n            const priemrabusqueda = []\r\n            \r\n            for(const pagina in data.allgamersonline){\r\n                if (Object.hasOwnProperty.call( data.allgamersonline, pagina)){\r\n                    const results = data.allgamersonline[pagina].results;\r\n                    const formattedResults = results.map(element => ({\r\n                        id: element.id,\r\n                        name: element.name,\r\n                        background_image: element.background_image,\r\n                        rating: element.rating,\r\n                        genres: element.genres[0].name \r\n                    }));\r\n                    priemrabusqueda.push(...formattedResults);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        /*    pagina.map((element) => {\r\n                const results = element.results\r\n                console.log(\"datos \"+results.id +' - '+results.name);                  \r\n                  return {\r\n                                      id: results.id,\r\n                                      name: results.name,\r\n                                      background_image: results.background_image,\r\n                                      rating: results.rating,\r\n                                      genres: results.genres[0].name,                           \r\n                                    }\r\n\r\n            } )\r\n         */\r\n\r\n/*\r\n          const priemrabusqueda =  results.map(element => {\r\n                console.log(\"datos \"+element.id +' - '+element.name);                  \r\n                  return {\r\n                                      id: element.id,\r\n                                      name: element.name,\r\n                                      background_image: element.background_image,\r\n                                      rating: element.rating,\r\n                                      genres: element.genres[0].name,                           \r\n                                    }\r\n                                  });\r\n\r\n                               //   console.log(\"mostrando busqueda\"+ JSON.stringify(priemrabusqueda))\r\n                               */\r\n            \r\n            dispatch({ \r\n                type: BUSCARALL,\r\n                payload: priemrabusqueda,   \r\n            })\r\n        } catch (error) {\r\n            console.error('Error al mostrar Juegos:', error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const genres = ()=>{\r\n    return async (dispatch)=> {\r\n        try {\r\n           \r\n              \r\n                const endpoint = 'http://localhost:3001/genres/'\r\n                const {data} = await axios.get(endpoint)\r\n                const genres = data.elementos\r\n                dispatch({\r\n                    type: GENRES,\r\n                    payload: genres,\r\n                })\r\n        \r\n        } catch (error) {\r\n            \r\n        }  \r\n    \r\n    }\r\n}\r\n\r\nexport const fiterCard = (gender) =>{\r\n    return {type:FILTER , payload: gender }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}